/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("const BASE_URL = 'https://eu-central-1.aws.data.mongodb-api.com/app/discoapp-cacui/endpoint/data/v1';\n\nasync function showShops() {\n  const tokenElement = document.getElementById('access-token')\n  console.log('tokenElement.value',tokenElement.value)\n\n  const shops = await getShops(tokenElement.value)\n  console.log('shops',shops)\n\n\n  const statusElement = document.getElementById('status')\n  if (shops.error) {\n    statusElement.innerText = `Error: ${shops.error}`\n    statusElement.style.borderColor = 'tomato'\n  } else {\n    statusElement.innerText = `Shops are loaded! üõí`\n    statusElement.style.borderColor = 'darkgreen'\n\n    const shopsSelect = document.getElementById('shops-list');\n    shops.documents.forEach(shop => {\n      shopsSelect.add(new Option(shop.name, shop._id));\n    })\n\n    setTimeout(() => {\n      statusElement.innerText = `Choose Shop and fill in Discount data -> click Save`\n      statusElement.style.borderColor = 'blue'\n    }, 3e3)\n  }\n}\n\nasync function onSave () {\n  const tokenElement = document.getElementById('access-token')\n  console.log('tokenElement.innerText',tokenElement.value)\n\n  const selectedShop = document.getElementById('shops-list').value;\n  console.log('selectedShop',selectedShop)\n\n  const imagesUrls = [...document.querySelectorAll('.image-url')]\n    .filter(e => !!e.value)\n    .map(e => e.value)\n  const dateStart = document.getElementById('date-start').value\n  const dateEnd = document.getElementById('date-end').value\n\n  const discountPayload = {dateStart, dateEnd, previewUrl: imagesUrls[0], imagesUrls, selectedShop}\n  console.log('discountPayload',discountPayload)\n\n  if (!validate(discountPayload)) {\n    return\n  }\n\n  const statusElement = document.getElementById('status')\n  try {\n    const discoResponse = await postDiscount(tokenElement.value, discountPayload)\n    console.log('discoResponse',discoResponse)\n    const discountId = discoResponse.insertedId\n\n    const shopUpdatedResponse = await addDiscoToShop(tokenElement.value, {shopId: selectedShop, discountId})\n    console.log('shopUpdatedResponse',shopUpdatedResponse)\n\n    if (discoResponse.insertedId) {\n      statusElement.innerText = `Success! üòé Discount is saved and attached to the shop üõçÔ∏è`\n      statusElement.style.borderColor = 'darkgreen'\n\n      clearAllFields()\n    } else {\n      statusElement.innerText = `Error: ${discoResponse.error || shopUpdatedResponse.error}`\n      statusElement.style.borderColor = 'tomato'\n    }\n  } catch (e) {\n    statusElement.innerText = `Error: ${e.error}`\n    statusElement.style.borderColor = 'tomato'\n  }\n}\n\nfunction validate({dateStart, dateEnd, imagesUrls, selectedShop}) {\n  const statusElement = document.getElementById('status')\n\n  if (!selectedShop) {\n    statusElement.innerText = `üè¨Ô∏è Choose a Shop!`\n    statusElement.style.borderColor = 'tomato'\n    return false\n  }\n\n  if (!dateStart || !dateEnd || !isValidDateFormat(dateStart) || !isValidDateFormat(dateEnd)) {\n    statusElement.innerText = `üìÖÔ∏è Something wrong with Dates - empty or wrong format!`\n    statusElement.style.borderColor = 'tomato'\n    return false\n  }\n\n  if (!imagesUrls || !imagesUrls.length) {\n    statusElement.innerText = `üîó At least one Discount Url Image needed!`\n    statusElement.style.borderColor = 'tomato'\n    return false\n  }\n\n  return true\n}\n\nasync function getShops(token) {\n const shopsResponse = await fetch(`${BASE_URL}/action/find`, {\n    method: \"POST\",\n    mode: \"cors\",\n    credentials: 'include',\n    headers: {\n      \"Content-Type\": \"application/ejson\",\n      \"Accept\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },body: JSON.stringify({\n      dataSource: \"mongodb-atlas\",\n      database: \"DiscoAppDB\",\n      collection: \"Shop\",\n    }),\n  });\n  console.log('shopsResponse',shopsResponse)\n  return shopsResponse.json();\n}\n\nasync function addDiscoToShop(token, {shopId, discountId}) {\n  const shopsResponse = await fetch(`${BASE_URL}/action/updateOne`, {\n    method: \"POST\",\n    mode: \"cors\",\n    credentials: 'include',\n    headers: {\n      \"Content-Type\": \"application/ejson\",\n      \"Accept\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },body: JSON.stringify({\n      dataSource: \"mongodb-atlas\",\n      database: \"DiscoAppDB\",\n      collection: \"Shop\",\n      filter: {\n        _id: { \"$oid\": shopId }\n      },\n      update: {\n        \"$push\": {discounts: {\"$oid\": discountId}}\n      }\n    }),\n  });\n  console.log('shopsResponse',shopsResponse)\n  return shopsResponse.json();\n}\n\nasync function postDiscount(token, payload) {\n  const postResponse = await fetch(`${BASE_URL}/action/insertOne`, {\n    method: \"POST\",\n    mode: \"cors\",\n    // cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    // credentials: \"same-origin\", // include, *same-origin, omit\n    credentials: 'include',\n    headers: {\n      \"Content-Type\": \"application/ejson\",\n      \"Accept\": \"application/json\",\n      // apiKey: 'pnhIbu6M4xp6iWl03Q0bFzIQ9vQ3FgZz8vl9nwRWocJ4ozCveYgnEGjCB66UYUWt',\n      Authorization: `Bearer ${token}`\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    // referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify({\n      dataSource: \"mongodb-atlas\",\n      database: \"DiscoAppDB\",\n      collection: \"Discount\",\n      document: {\n        _id: { \"$oid\": generateHexadecimalHash(24) },\n        description: 'test-des',\n        ...payload\n      }\n    }), // body data type must match \"Content-Type\" header\n  });\n  console.log('postResponse',postResponse)\n  return postResponse.json(); // parses JSON shopsResponse into native JavaScript objects\n}\n\nfunction generateHexadecimalHash(length) {\n  let result = '';\n  const characters = 'abcdef0123456789';\n  const charactersLength = characters.length;\n  let counter = 0;\n  while (counter < length) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    counter += 1;\n  }\n  return result;\n}\n\nfunction addInput() {\n  const container = document.getElementById('inputs-container')\n  const newInput = document.createElement('input')\n  newInput.className = 'image-url'\n  newInput.style.display = \"block\"\n  newInput.style.width = '800px'\n  newInput.style.marginBottom = '5px'\n\n  container.appendChild(newInput)\n}\n\nfunction clearAllFields() {\n  [...document.querySelectorAll('.image-url')].forEach(elem => elem.value = '')\n  document.getElementById('date-start').value = '';\n  document.getElementById('date-end').value = '';\n  document.getElementById('shops-list').value = '';\n\n  const statusElement = document.getElementById('status')\n  setTimeout(() => {\n    statusElement.innerText = `Choose Shop üè¨and fill in Discount data  -> click Save`\n    statusElement.style.borderColor = 'blue'\n  }, 2e3)\n}\n\nfunction isValidDateFormat(dateString) {\n  // Regular expression for matching the \"YYYY-MM-DD\" format\n  const regex = /^\\d{4}-\\d{2}-\\d{2}$/;\n\n  // Test the dateString against the regex\n  if (regex.test(dateString)) {\n    // Additional check to ensure the date is valid (e.g., not \"2023-02-30\")\n    const date = new Date(dateString);\n    return date instanceof Date && !isNaN(date);\n  }\n\n  return false;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;